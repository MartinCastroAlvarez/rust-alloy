version: '3.8'

# Define custom network for service communication
networks:
  zknet:
    driver: bridge

volumes:
  anvil-data:

services:
  # Anvil service - Local Ethereum development node
  anvil:
    build:
      context: .
      dockerfile: Dockerfile.anvil
    ports:
      - "8545:8545"  # Maps container's Anvil port to host machine
    volumes:
      - anvil-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - zknet

  # Rust API server for generating and verifying zero-knowledge proofs
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3030:3030"  # API port
    depends_on:
      - anvil
      - otel-collector
    environment:
      - ETHEREUM_RPC_URL=http://anvil:8545
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3030/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - zknet

  # OpenTelemetry metrics collector
  otel-collector:
    image: otel/opentelemetry-collector:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:13133"]  # Health check endpoint
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - zknet

  # Prometheus for storage of OpenTelemetry metrics
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus-service.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - zknet

  # Grafana for visualization of OpenTelemetry metrics
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - zknet
    volumes:
      - ./prometheus-grafana.yml:/etc/grafana/provisioning/datasources/prometheus.yml
